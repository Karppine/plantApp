Annotaatioilla saisi helposti luotua näkymän jossa tietoa kasveista -> kaikki taulun atribuutit sekä relaatiotaulun kastelut listana.

Sama homma käyttäjissä -> helppo saada käyttäjän kaikki kastelut.

Molemmat perjaattessa liittyy kasteluihin mutta tietojen haku tapahtuisi UserRepository ja PlantRepository kautta. Mihin nää kannattaisi projektissa sijoittaa, entä millaset api endpointit.


kasvissa kannattaa varmaan olla ON DELETE CASCADE, mutta käyttäjissä ei.



------------------------------------------------------------------------------------------------------

Käyttöliittymä: (ainaki nyt alkuun että saadan toimimana, ei mitään authia)

unohdetaan käyttäjät nyt alkuun kokonaan.
-käyttäjä -> ei tarvi omaa näkymää

-PlantView -> crud näkymä kasveista.

-WateringView -> kastelu/lannoitus näkymä. (nimi ehkä kanttis vaihtaa.)


!LISÄTTÄVÄÄ!

-UUSI: crud näkymä kastelu ja lannoitus tauluille.

ominaisuus peruuttaa kastelu -> transaktiosta ehkä sais toteutettua

lokikirja varmaan kanttis lisätä

------------------------------------------------------------------------------------------------------




select name, watering_day, fertilizer from plant left join watering on plant.id = watering.plantId;






kastelu modelista puuttuu validointi

plantView:issa osa metodeista hassun nimisä.




https://www.mysqltutorial.org/mysql-triggers/mysql-after-insert-trigger/
https://www.mysqltutorial.org/mysql-stored-procedure/mysql-delimiter/

DELIMITER $$

CREATE TRIGGER update_plant_on_watering
AFTER INSERT ON watering
FOR EACH ROW
BEGIN
    UPDATE plant
    SET last_watered = NEW.watering_day
    WHERE id = NEW.plantId;

    IF NEW.fertilizer THEN
        UPDATE plant
        SET last_fertilized = NEW.watering_day
        WHERE id = NEW.plantId;
    END IF;
END$$

DELIMITER;


trigger lisätty ja toimii!!


DELIMITER $$

CREATE TRIGGER update_plant_after_delete
AFTER DELETE ON watering
FOR EACH ROW
BEGIN
    UPDATE plant
    SET last_watered = NEW.watering_day
    WHERE id = NEW.plantId;

    IF NEW.fertilizer THEN
        UPDATE plant
        SET last_fertilized = NEW.watering_day
        WHERE id = NEW.plantId;
    END IF;
END$$

DELIMITER;