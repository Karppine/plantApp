Tällä hetkellä kasvia ei voi poistaa ellei eka poista ite kaikkia sen kasteluita

kasvissa kannattaa varmaan olla ON DELETE CASCADE, mutta käyttäjissä ei.



------------------------------------------------------------------------------------------------------

Käyttöliittymä: (ainaki nyt alkuun että saadan toimimana, ei mitään authia)

unohdetaan käyttäjät nyt alkuun kokonaan.
-käyttäjä -> ei tarvi omaa näkymää

-PlantView -> crud näkymä kasveista.

-WateringView -> kastelu/lannoitus näkymä. (nimi ehkä kanttis vaihtaa.)


!LISÄTTÄVÄÄ!

-UUSI: crud näkymä kastelu ja lannoitus tauluille.

ominaisuus peruuttaa kastelu -> transaktiosta ehkä sais toteutettua

lokikirja varmaan kanttis lisätä

kastelu modelista puuttuu validointi

plantView:issa osa metodeista hassun nimisä.


------------------------------------------------------------------------------------------------------

select name, watering_day, fertilizer from plant left join watering on plant.id = watering.plantId;



Triggerit jotka koodi olettaa tietokannan sisältävän

https://www.mysqltutorial.org/mysql-triggers/mysql-after-insert-trigger/
https://www.mysqltutorial.org/mysql-stored-procedure/mysql-delimiter/

DELIMITER $$

CREATE TRIGGER update_plant_on_watering
AFTER INSERT ON watering
FOR EACH ROW
BEGIN
    UPDATE plant
    SET last_watered = NEW.watering_day
    WHERE id = NEW.plantId;

    IF NEW.fertilizer THEN
        UPDATE plant
        SET last_fertilized = NEW.watering_day
        WHERE id = NEW.plantId;
    END IF;
END$$

DELIMITER;


ylempi ja alempi trigger lisätty ja toimii!!

DELIMITER $$

CREATE TRIGGER update_plant_after_watering_delete
AFTER DELETE ON watering
FOR EACH ROW
BEGIN
    -- Declare variables to store the most recent watering and fertilizer use
    DECLARE recent_watering_day DATE;
    DECLARE recent_fertilizer_day DATE;

    -- Find the most recent watering day for the plant after the deleted row
    SELECT MAX(watering_day)
    INTO recent_watering_day
    FROM watering
    WHERE plantId = OLD.plantId;

    -- Find the most recent fertilized watering day for the plant
    SELECT MAX(watering_day)
    INTO recent_fertilizer_day
    FROM watering
    WHERE plantId = OLD.plantId AND fertilizer = TRUE;

    -- Update the plant table with the most recent watering and fertilized data
    UPDATE plant
    SET
        last_watered = recent_watering_day,
        last_fertilized = recent_fertilizer_day
    WHERE id = OLD.plantId;
END$$

DELIMITER ;